import React, {useState, useCallback, useEffect} from 'react';
import './assets/styles/style.css'
import {db} from './firebase/index'
import {AnswersList, Chats, FormDialog} from './components/index'


const App = () => {
    const [answers, setAnswers] = useState([]);            // ÂõûÁ≠î„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Å´Ë°®Á§∫„Åô„Çã„Éá„Éº„Çø
    const [chats, setChats] = useState([]);                // „ÉÅ„É£„ÉÉ„Éà„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Å´Ë°®Á§∫„Åô„Çã„Éá„Éº„Çø
    const [currentId, setCurrentId] = useState('init');    // ÁèæÂú®„ÅÆË≥™ÂïèID
    const [dataset, setDataset] = useState({});            // Ë≥™Âïè„Å®ÂõûÁ≠î„ÅÆ„Éá„Éº„Çø„Çª„ÉÉ„Éà
    const [open, setOpen] = useState(false);               // Âïè„ÅÑÂêà„Çè„Åõ„Éï„Ç©„Éº„É†Áî®„É¢„Éº„ÉÄ„É´„ÅÆÈñãÈñâ„ÇíÁÆ°ÁêÜ

    // Âïè„ÅÑÂêà„Çè„Åõ„Éï„Ç©„Éº„É†Áî®„É¢„Éº„ÉÄ„É´„ÇíÈñã„ÅèCallbackÈñ¢Êï∞
    const handleOpen = useCallback(() => {
        setOpen(true)
    },[setOpen]);

    // Âïè„ÅÑÂêà„Çè„Åõ„Éï„Ç©„Éº„É†Áî®„É¢„Éº„ÉÄ„É´„ÇíÈñâ„Åò„ÇãCallbackÈñ¢Êï∞
    const handleClose = useCallback(() => {
        setOpen(false)
    },[setOpen]);

    // Êñ∞„Åó„ÅÑ„ÉÅ„É£„ÉÉ„Éà„ÇíËøΩÂä†„Åô„ÇãCallbackÈñ¢Êï∞
    const addChats = useCallback((chat) => {
        setChats(prevChats => {
            return [...prevChats, chat]
        })
    },[setChats]);

    // Ê¨°„ÅÆË≥™Âïè„Çí„ÉÅ„É£„ÉÉ„Éà„Ç®„É™„Ç¢„Å´Ë°®Á§∫„Åô„ÇãÈñ¢Êï∞
    const displayNextQuestion = (nextQuestionId, nextDataset) => {
        // ÈÅ∏Êäû„Åï„Çå„ÅüÂõûÁ≠î„Å®Ê¨°„ÅÆË≥™Âïè„Çí„ÉÅ„É£„ÉÉ„Éà„Å´ËøΩÂä†
        addChats({
            text: nextDataset.question,
            type: 'question'
        });

        // Ê¨°„ÅÆÂõûÁ≠î‰∏ÄË¶ß„Çí„Çª„ÉÉ„Éà
        setAnswers(nextDataset.answers)

        // ÁèæÂú®„ÅÆË≥™ÂïèID„Çí„Çª„ÉÉ„Éà
        setCurrentId(nextQuestionId)
    }

    // ÂõûÁ≠î„ÅåÈÅ∏Êäû„Åï„Çå„ÅüÊôÇ„Å´Âëº„Å∞„Çå„ÇãÈñ¢Êï∞
    const selectAnswer = useCallback((selectedAnswer, nextQuestionId) => {
        switch (true) {
            // „ÅäÂïè„ÅÑÂêà„Çè„Åõ„ÅåÈÅ∏Êäû„Åï„Çå„ÅüÂ†¥Âêà
            case (nextQuestionId === 'contact'):
                handleOpen();
                break;

            // „É™„É≥„ÇØ„ÅåÈÅ∏Êäû„Åï„Çå„ÅüÊôÇ
            case /^https:*/.test(nextQuestionId):
                const a = document.createElement('a');
                a.href = nextQuestionId;
                a.target = '_blank';
                a.click();
                break;

            // ÈÅ∏Êäû„Åï„Çå„ÅüÂõûÁ≠î„Çíchats„Å´ËøΩÂä†
            default:
                // ÁèæÂú®„ÅÆ„ÉÅ„É£„ÉÉ„Éà‰∏ÄË¶ß„ÇíÂèñÂæó
                addChats({
                    text: selectedAnswer,
                    type: 'answer'
                })

                setTimeout(() => displayNextQuestion(nextQuestionId, dataset[nextQuestionId]), 750)
                break;
        }
    },[answers]);

    // ÊúÄÂàù„ÅÆË≥™Âïè„Çí„ÉÅ„É£„ÉÉ„Éà„Ç®„É™„Ç¢„Å´Ë°®Á§∫„Åô„Çã
    useEffect(() => {
        (async() => {
            const initDataset = {};

            // Fetch questions dataset from Firestore
            await db.collection('questions').get().then(snapshots => {
                snapshots.forEach(doc => {
                    initDataset[doc.id] = doc.data()
                })
            });

            // Firestore„Åã„ÇâÂèñÂæó„Åó„Åü„Éá„Éº„Çø„Çª„ÉÉ„Éà„ÇíÂèçÊò†
            setDataset(initDataset);

            // ÊúÄÂàù„ÅÆË≥™Âïè„ÇíË°®Á§∫
            displayNextQuestion(currentId, initDataset[currentId])
        })();
    }, []);

    // ÊúÄÊñ∞„ÅÆ„ÉÅ„É£„ÉÉ„Éà„ÅåË¶ã„Åà„Çã„Çà„ÅÜ„Å´„ÄÅ„Çπ„ÇØ„É≠„Éº„É´‰ΩçÁΩÆ„ÅÆÈ†ÇÁÇπ„Çí„Çπ„ÇØ„É≠„Éº„É´È†òÂüü„ÅÆÊúÄ‰∏ãÈÉ®„Å´Ë®≠ÂÆö„Åô„Çã
    useEffect(() => {
        const scrollArea = document.getElementById('scroll-area');
        if (scrollArea) {
            scrollArea.scrollTop = scrollArea.scrollHeight;
        }
    });

    return (
        <section className="c-section">
            <header className="HeaderBox">
                <div className="HeaderBox__right">
                    <img className="HeaderBox__right--logo"/>
                </div>
                <ul className="HeaderBox__links">
                    <li className="HeaderBox__links--element">about</li>
                    <li className="HeaderBox__links--element">works</li>
                    <li className="HeaderBox__links--element">contact</li>
                    <li className="HeaderBox__links--element">qiita</li>
                    <li className="HeaderBox__links--icon">üê•</li>
                    <li className="HeaderBox__links--icon">üê±</li>
                </ul>
            </header>
            <main>
                <section >
                    <div className="MainContainer">
                        <div className="MainContainer__action">
                            <h2 className="MainContainer__action--name">Kota Takahashi</h2>
                            <a href="#" className="MainContainer__action--works">WORKS</a>
                        </div>
                        <div className="c-box">
                            <Chats chats={chats} />
                            <AnswersList answers={answers} select={selectAnswer}/>
                            <FormDialog open={open} handleOpen={handleOpen} handleClose={handleClose}/>
                        </div>
                    </div>
                </section>
            </main>
        </section>
    )
}

export default App;